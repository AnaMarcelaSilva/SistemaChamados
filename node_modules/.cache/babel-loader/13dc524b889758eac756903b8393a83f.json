{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anama\\\\Documents\\\\sigos\\\\src\\\\routes\\\\Route.js\";\nimport { createContext, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../contexts/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RouterWrapper(_ref) {\n  let {\n    component: Component,\n    isPrivate,\n    ...rest\n  } = _ref;\n  const {\n    signed\n  } = /*#__PURE__*/createContext(AuthContext);\n  const loading = false;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Carrengando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  } // Verificando se o usuário esta logado no sistema e retornando a tela de login caso não esteja.\n\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  } //Verificando se está logado e retornando a tela de painel caso esteja.\n\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = RouterWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouterWrapper\");","map":{"version":3,"names":["createContext","useContext","Route","Redirect","AuthContext","RouterWrapper","component","Component","isPrivate","rest","signed","loading","props"],"sources":["C:/Users/anama/Documents/sigos/src/routes/Route.js"],"sourcesContent":["import { createContext, useContext } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/auth';\r\n\r\nexport default function RouterWrapper({\r\n  component: Component, \r\n  isPrivate,\r\n  ...rest\r\n}){\r\n\r\n  const{ signed } = createContext(AuthContext);\r\n  const loading = false;\r\n\r\n  if(loading){\r\n    return(\r\n      <div>\r\n        <h1>Carrengando...</h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Verificando se o usuário esta logado no sistema e retornando a tela de login caso não esteja.\r\n  if(!signed && isPrivate){\r\n    return <Redirect to=\"/\"/>\r\n  }\r\n\r\n  //Verificando se está logado e retornando a tela de painel caso esteja.\r\n  if(signed && !isPrivate){\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return( \r\n    <Route \r\n      {...rest}\r\n      render={props => (\r\n        <Component {...props}/>\r\n      )}\r\n    />\r\n  )\r\n}"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,aAAT,OAIb;EAAA,IAJoC;IACpCC,SAAS,EAAEC,SADyB;IAEpCC,SAFoC;IAGpC,GAAGC;EAHiC,CAIpC;EAEA,MAAK;IAAEC;EAAF,iBAAaV,aAAa,CAACI,WAAD,CAA/B;EACA,MAAMO,OAAO,GAAG,KAAhB;;EAEA,IAAGA,OAAH,EAAW;IACT,oBACE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAXD,CAaA;;;EACA,IAAG,CAACD,MAAD,IAAWF,SAAd,EAAwB;IACtB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAhBD,CAkBA;;;EACA,IAAGE,MAAM,IAAI,CAACF,SAAd,EAAwB;IACtB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,KAAD,OACMC,IADN;IAEE,MAAM,EAAEG,KAAK,iBACX,QAAC,SAAD,OAAeA;IAAf;MAAA;MAAA;MAAA;IAAA;EAHJ;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;KAnCuBP,a"},"metadata":{},"sourceType":"module"}