[{"C:\\Users\\anama\\Documents\\sigos\\src\\index.js":"1","C:\\Users\\anama\\Documents\\sigos\\src\\App.js":"2","C:\\Users\\anama\\Documents\\sigos\\src\\services\\firebaseConnection.js":"3","C:\\Users\\anama\\Documents\\sigos\\src\\routes\\index.js":"4","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Signin\\index.js":"5","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Signup\\index.js":"6","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Dashboard\\index.js":"7","C:\\Users\\anama\\Documents\\sigos\\src\\routes\\Route.js":"8","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\SignUp\\index.js":"9","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\SignIn\\index.js":"10","C:\\Users\\anama\\Documents\\sigos\\src\\contexts\\auth.js":"11","C:\\Users\\anama\\Documents\\sigos\\src\\components\\Header\\index.js":"12","C:\\Users\\anama\\Documents\\sigos\\src\\components\\Title\\index.js":"13","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Profile\\index.js":"14","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Cliente\\index.js":"15","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\New\\index.js":"16","C:\\Users\\anama\\Documents\\sigos\\src\\components\\modal\\index.js":"17","C:\\Users\\anama\\Documents\\sigos\\src\\components\\Modal\\index.js":"18"},{"size":254,"mtime":1653401996719,"results":"19","hashOfConfig":"20"},{"size":482,"mtime":1653915503967,"results":"21","hashOfConfig":"20"},{"size":740,"mtime":1654354094786,"results":"22","hashOfConfig":"20"},{"size":850,"mtime":1656086362413,"results":"23","hashOfConfig":"20"},{"size":127,"mtime":1653415170289,"results":"24","hashOfConfig":"20"},{"size":128,"mtime":1653415162859,"results":"25","hashOfConfig":"20"},{"size":5608,"mtime":1656094896526,"results":"26","hashOfConfig":"20"},{"size":812,"mtime":1653754460308,"results":"27","hashOfConfig":"20"},{"size":2218,"mtime":1655743697285,"results":"28","hashOfConfig":"20"},{"size":1185,"mtime":1654364380296,"results":"29","hashOfConfig":"20"},{"size":3552,"mtime":1655742117805,"results":"30","hashOfConfig":"20"},{"size":796,"mtime":1655648731073,"results":"31","hashOfConfig":"20"},{"size":179,"mtime":1655645456168,"results":"32","hashOfConfig":"20"},{"size":4577,"mtime":1654365429931,"results":"33","hashOfConfig":"20"},{"size":419,"mtime":1653928670909,"results":"34","hashOfConfig":"20"},{"size":5338,"mtime":1656099565554,"results":"35","hashOfConfig":"20"},{"size":1206,"mtime":1656087431479,"results":"36","hashOfConfig":"20"},{"size":1206,"mtime":1656087431479,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"6ylxsq",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"41"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},"C:\\Users\\anama\\Documents\\sigos\\src\\index.js",[],[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\App.js",[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\services\\firebaseConnection.js",[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\routes\\index.js",[],[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Signin\\index.js",[],[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Signup\\index.js",["102","103"],[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Dashboard\\index.js",["104","105","106","107","108"],[],"import { useState, useEffect } from 'react';\r\nimport {FiMessageSquare, FiPlus, FiSearch, FiEdit2} from 'react-icons/fi';\r\nimport './dashboard.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Title from '../../components/Title';\r\nimport Header from '../../components/Header';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport firebase from '../../services/firebaseConnection';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function Dashboard(){\r\n\r\n  //criando constante que acessa os chamados no firebase e ordena pala data de criação\r\n  const listRef = firebase.firestore().collection('chamados').orderBy('created', 'desc');\r\n\r\n  const [chamados, setChamados] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n\r\n  const [postModal, setPostModal] = useState(false);\r\n  const [detail, setDetail] = useState();\r\n\r\n  useEffect(() => {\r\n    loadChamados();\r\n\r\n    //Buscando chamados no firebase\r\n    async function loadChamados(){\r\n      await listRef\r\n      .get()\r\n      .then((snapshot)=>{\r\n        updateState(snapshot);\r\n      })\r\n      .catch((error)=>{\r\n        console.log('Deu algum erro: ', error);\r\n      })\r\n  \r\n      setLoading(false);\r\n    }\r\n\r\n  }, [])\r\n  \r\n  async function updateState (snapshot){\r\n    const collectionEmpty = snapshot.size ===0;\r\n\r\n    //verificando se a coleção não está vazia\r\n    if(!collectionEmpty){\r\n      let lista=[];\r\n\r\n      //percorrendo os documentos do firebesa e buscando dados\r\n      snapshot.forEach((doc)=>{\r\n        lista.push({\r\n          assunto: doc.data().assunto,\r\n          created: doc.data().created,\r\n          createdFormatad: format(doc.data().created.toDate(), 'dd/MM/yyyy'),\r\n          createdDescricao: format(doc.data().created.toDate(), 'dd/MM/yyyy HH:mm'),\r\n          descricao: doc.data().descricao,\r\n          email: doc.data().email,\r\n          requerente: doc.data().requerente,\r\n          rm: doc.data().rm,\r\n          status: doc.data().status,\r\n          codigo: doc.data().codigo,\r\n          id: doc.id\r\n        })\r\n      })\r\n\r\n      //Constante que pega o ultimo documento carregado\r\n      const lastDoc = snapshot.docs[snapshot.docs.length -1];\r\n\r\n      setChamados(chamados => [...lista]);\r\n      \r\n    }else{\r\n      setIsEmpty(true);\r\n    }\r\n  }\r\n\r\n  //Renderização enquanto busca novos chamados\r\n  if(loading){\r\n    return(\r\n      <div>\r\n        <Header/>\r\n      \r\n        <div className='content'>\r\n          <Title name='Atendimentos'>\r\n          <FiMessageSquare size={25}/>\r\n          </Title>\r\n        </div>\r\n\r\n        <div className='container dashboard'>\r\n          <span>Buscando novos chamados...</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Função para abrir/fechar modal através do seu valor(true or false)\r\n  function search(item){\r\n    setPostModal(!postModal);\r\n    console.log(postModal);\r\n    setDetail(item); \r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Header/>\r\n      \r\n      <div className='content'>\r\n        <Title name='Atendimentos'>\r\n        <FiMessageSquare size={25}/>\r\n        </Title>\r\n\r\n        {chamados.length === 0 ? (\r\n          <div className=\"container dashboard\">\r\n            <span>Nenhum chamado registrado...</span>\r\n\r\n            <Link to=\"/new\" className=\"new\">\r\n              <FiPlus size={25} color=\"#FFF\" />\r\n              Novo chamado\r\n            </Link>\r\n          </div>\r\n          )  :( <>\r\n              <Link to=\"/new\" className=\"new\">\r\n                  <FiPlus size={25} color=\"#FFF\"/>\r\n                  Novo chamado\r\n                </Link>\r\n                <table>\r\n                  <thead>\r\n                    <tr className='tr-head'>\r\n                      <th>Código</th>\r\n                      <th className='requerente'>Requerente</th>\r\n                      <th>Assunto</th>\r\n                      <th>Status</th>\r\n                      <th>Criado em</th>\r\n                      <th> </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {chamados.map((item, index)=>{\r\n                      return(\r\n                        <tr key={index}>\r\n                        <td>{item.codigo}</td>\r\n                        <td className='requerente'>{item.requerente}</td>\r\n                        <td className='email'>{item.email}</td>\r\n                        <td >{item.assunto}</td>\r\n                        <td>\r\n                          <span className='badge' style={{backgroundColor: item.status === 'Aberto' || item.status === \"Progesso\" ? '#5cb58c' : '#999' }}>{item.status}</span>\r\n                        </td>\r\n                        <td>{item.createdFormatad}</td>\r\n                        <td>\r\n                          <button className='action' style={{backgroundColor: '#3583f6'}} onClick={()=> search(item)}>\r\n                            <FiSearch color='#FFF' size={17}/>\r\n                          </button>\r\n                          <Link className='action' style={{backgroundColor: '#f6a935'}} to={`/new/${item.id}`}>\r\n                            <FiEdit2 color='#FFF' size={17}/>\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                      )\r\n                    })}              \r\n                  </tbody>\r\n                </table>\r\n            </>\r\n        )}\r\n            \r\n      </div>\r\n\r\n     {postModal && (\r\n       <Modal\r\n       item={detail}\r\n        close={search}\r\n       />\r\n     )}               \r\n\r\n    </div>\r\n  )\r\n}","C:\\Users\\anama\\Documents\\sigos\\src\\routes\\Route.js",[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\SignUp\\index.js",["109","110","111"],[],"\r\nimport { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './signup.css';\r\n\r\nfunction SignUp() {\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rm, setRm] = useState('');\r\n  const [cargo, setCargo] = useState('Técnico');\r\n\r\n  const { signUp, loadinAuth } = useContext(AuthContext);\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    if(nome !== '' && email !== '' && password !== ''){\r\n      signUp(email, password, nome, cargo, rm);\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  function selectCargo (e){\r\n    setCargo(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-center\">\r\n      <div className=\"login\">\r\n        <div className=\"logo-area\">\r\n          <h1>SIGOS</h1>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Cadastrar uma conta</h2>\r\n          <input type=\"text\" required placeholder=\"Seu nome\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n          <input type='text' required placeholder='RM' value={rm} onChange={(e) => setRm(e.target.value)}/>\r\n          <input type=\"text\" required placeholder=\"email@email.com\" value={email} onChange={ (e) => setEmail(e.target.value) }/>\r\n\r\n          <select value={cargo} onChange={(e) => {setCargo(e.target.value);}}>\r\n              <option disabled selected>- Selecione seu cargo -</option>\r\n                <option value='Técnico'>Técnico</option>\r\n                <option value='Professor(a)' >Professor(a)</option>\r\n                <option value='Diretor(a)'>Diretor(a)</option>\r\n                <option value='Secretario(a)'>Secretario(a)</option>\r\n            </select>\r\n          <input type=\"password\" required placeholder=\"*******\" value={password} onChange={(e) => setPassword(e.target.value) } />\r\n          <button type=\"submit\">{loadinAuth ? 'Carregando...' : 'Acessar'}</button>\r\n        </form>  \r\n\r\n        <Link to=\"/\">Já tem uma conta? Entre</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n",[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\SignIn\\index.js",[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\contexts\\auth.js",["112"],[],"C:\\Users\\anama\\Documents\\sigos\\src\\components\\Header\\index.js",["113"],[],"import './header.css';\r\nimport {AuthContext} from '../../contexts/auth';\r\nimport { useContext } from 'react';\r\nimport avatar from '../../assets/avatar.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { FiHome, FiPlus, FiSettings } from \"react-icons/fi\";\r\nimport Title from '../Title';\r\n\r\nexport default function Header (){\r\n  const {user} = useContext(AuthContext);\r\n  \r\n  return(\r\n    <div className='sidebar'>\r\n      <div>\r\n        <img src={user.avatarUrl === null ? avatar : user.avatarUrl } alt=\"Foto avatar\" />\r\n      </div>\r\n      <Link to='/dashboard'><FiHome color=\"#FFF\" size={24}/>Chamados</Link>\r\n      <Link to='/new'> <FiPlus color=\"#FFF\" size={24}/>Novo Chamado</Link>\r\n      <Link to='/Profile'><FiSettings color=\"#FFF\" size={24}/>Configurações</Link>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\anama\\Documents\\sigos\\src\\components\\Title\\index.js",[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Profile\\index.js",["114","115","116","117","118"],[],"import './Profile.css';\r\nimport { useContext, useState} from 'react';\r\nimport '../../components/Header';\r\nimport Header from '../../components/Header';\r\nimport Title from '../../components/Title';\r\nimport {FiSettings, FiUpload} from 'react-icons/fi';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport avatar from '../../assets/avatar.png'\r\nimport firebase from '../../services/firebaseConnection';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Profile(){\r\n  const {user, setUser, signOut, storageUser} = useContext(AuthContext);\r\n\r\n  const [nome, setNome] = useState(user && user.nome);\r\n  const [email, setEmail] = useState(user && user.email);\r\n  const [rm, setRm] = useState(user && user.rm);\r\n  const [cargo, setCargo] = useState(user && user.cargo);\r\n  const [avatarUrl, setAvatarUrl] = useState(user && user.avatarUrl);\r\n  const [imageAvatar, setImageAvatar] = useState(null);\r\n\r\n//pré visualização da imagem **Não tá funcionando**\r\n  function handleFile(e){\r\n\r\n    if(e.target.files[0]){\r\n      const image = e.target.files[0];\r\n\r\n      \r\n      if(image.type === 'image/jpeg' || image.type === 'image/png'){\r\n\r\n        setImageAvatar(image);\r\n        setAvatarUrl(URL.createObjectURL(e.target.files[0]))\r\n\r\n        alert(\"PQ NÃO TÁ SALVANDO SENHOR\");\r\n\r\n      }else{\r\n        alert('Envie uma imagem do tipo PNG ou JPEG');\r\n        setImageAvatar(null);\r\n        return null;\r\n        alert(\" o q tá rolando\");\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  //Enviando a imagem para o storage\r\n  async function handleUpload(){\r\n    const currentUid = user.uid;\r\n\r\n    const uploadTask = await firebase.storage()\r\n    .ref(`images/${currentUid}/${imageAvatar.name}`)\r\n    .put(imageAvatar)\r\n    .then( async () => {\r\n      console.log('FOTO ENVIADA COM SUCESSO!');\r\n\r\n      await firebase.storage().ref(`images/${currentUid}`)\r\n      .child(imageAvatar.name).getDownloadURL()\r\n      .then( async (url)=>{\r\n        let urlFoto = url;\r\n\r\n        //enviando a url da imagem para o firestore\r\n        await firebase.firestore().collection('users')\r\n        .doc(user.uid)\r\n        .update({\r\n          avatarUrl: urlFoto,\r\n          nome: nome\r\n        })\r\n        .then(()=>{\r\n          let data = {\r\n            ...user,\r\n            avatarUrl: urlFoto,\r\n            nome: nome\r\n          }; \r\n          setUser(data);\r\n          storageUser(data);\r\n        })\r\n\r\n      })\r\n      .catch((error) =>{\r\n        console.log(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  //Salvando foto na aplicação e enviando a url da imagem para o firestore \r\n  async function handleSave(e){\r\n  e.preventDefault();\r\n  \r\n  if(imageAvatar === null && nome !== ''){\r\n    await firebase.firestore().collection('users')\r\n    .doc(user.uid)\r\n    .update({\r\n      nome: nome\r\n    })\r\n    .then(()=>{\r\n      let data = {\r\n        ...user,\r\n        nome: nome\r\n      };\r\n      setUser(data);\r\n      storageUser(data);\r\n      toast.success('Campo atualizado!');\r\n    })\r\n  }\r\n  else if(imageAvatar !== null && nome !== ''){\r\n    handleUpload();\r\n  }\r\n  \r\n}\r\n\r\n  return(\r\n    <div>\r\n      <Header/>\r\n\r\n        <div className='content'>\r\n          <Title name='Meu perfil'>\r\n          <FiSettings size={25}/>\r\n          </Title>\r\n\r\n          <div className='container'>\r\n            <form className='form-profile' onSubmit={handleSave}>\r\n              <label className='label-avatar'>\r\n                <span>\r\n                  <FiUpload size={25} color='#FFF'/>\r\n                </span>\r\n\r\n                <input type='file' accept='image/*' onChange={handleFile}/>\r\n                <br/>\r\n                {avatarUrl === null ? \r\n                <img src={avatar} width='250' height='250' alt='Foto de perfil do usuário'/>\r\n                :<img src={avatar} width='250' height='250' alt='Foto de perfil do usuário'/>}\r\n              </label>\r\n\r\n              <label>Nome</label>\r\n              <input type='text' value={nome} onChange={(e) => setNome(e.target.value)}/>\r\n\r\n              <label>Cargo</label>\r\n              <input type='text' value={cargo} disabled={true}/>\r\n\r\n              <label>RM</label>\r\n              <input type='text' value={rm} disabled={true}/>\r\n\r\n              <label>E-mail</label>\r\n              <input type=\"text\" value={email} disabled={true} /> \r\n\r\n              <button type='submit' className='salvar-btn'>Salvar</button>\r\n\r\n            </form>\r\n          </div>\r\n          <div className='sair-btn'>\r\n          <button type='submit' onClick={() => signOut ()} className='logout-btn'>Sair</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\anama\\Documents\\sigos\\src\\pages\\Cliente\\index.js",[],[],"C:\\Users\\anama\\Documents\\sigos\\src\\pages\\New\\index.js",["119","120","121"],[],"import Header from '../../components/Header';\r\nimport Title from '../../components/Title';\r\nimport {FiPlus} from 'react-icons/fi';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport firebase from '../../services/firebaseConnection';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport './new.css';\r\n\r\nexport default function New(){\r\n  const {id} = useParams(); //buscar dados na url que correspodem a id\r\n  const history = useHistory();\r\n\r\n  const {user, setUser} = useContext(AuthContext);\r\n\r\n  const [nome, setNome] = useState(user && user.nome);\r\n  const [email, SetEmail] = useState(user && user.email);\r\n  const [rm, SetRm] = useState(user && user.rm);\r\n  const [assunto, setAssunto] = useState(\"Suporte\");\r\n  const [status, setStatus] = useState(\"Aberto\");\r\n  const [descricao, setDescricao] = useState('');\r\n  const [codigo, setCodigo] = useState(0);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    loadId();\r\n    setEdit(true);\r\n      \r\n  }, [id])\r\n\r\n  async function loadId(){\r\n  await firebase.firestore().collection('chamados').doc(id)\r\n  .get()\r\n  .then((snapshot)=>{\r\n    setAssunto(snapshot.data().assunto);\r\n    setStatus(snapshot.data().status);\r\n    setDescricao(snapshot.data().descricao);\r\n    setCodigo(snapshot.data().codigo);\r\n    setNome(snapshot.data().nome);\r\n    SetEmail(snapshot.data().email);\r\n\r\n    setEdit(true)\r\n  })\r\n  .catch((error)=>{\r\n    console.log('erro no id passado', error);\r\n  })\r\n}\r\n\r\n  async function Register(e){\r\n    e.preventDefault();\r\n/*  let gerarNum = codigo;\r\n      gerarNum++;\r\n      while(gerarNum <= codigo){\r\n        gerarNum++;\r\n        setCodigo(gerarNum);\r\n      }\r\n      setCodigo(gerarNum);\r\n      console.log(codigo); */\r\n\r\n      if(edit){\r\n        await firebase.firestore().collection('chamados')\r\n        .doc(id)\r\n        .update({\r\n          requerente: nome,\r\n          email: email,\r\n          assunto: assunto,\r\n          status: status,\r\n          descricao: descricao,\r\n          rm: rm,\r\n          codigo: codigo\r\n        })\r\n        .then(()=>{\r\n          toast.success('Chamados editado com sucesso!');\r\n          history.push('/dashboard')\r\n          setDescricao(\"\");\r\n        })\r\n        .catch((error)=>{\r\n          console.log(error);\r\n          toast.error(\"Falha ao editar chamado, tente mais tarde!\")\r\n        })\r\n        return;\r\n      }\r\n\r\n    await firebase.firestore().collection(\"chamados\")\r\n    .add({\r\n      created: new Date(),\r\n      requerente: nome,\r\n      email: email,\r\n      assunto: assunto,\r\n      status: status,\r\n      descricao: descricao,\r\n      rm: rm,\r\n      codigo: codigo\r\n    }) \r\n    .then(()=>{\r\n      toast.success(\"Chamado registrado com sucesso!\");\r\n      setDescricao(\"\");\r\n    })\r\n    .catch((error)=>{\r\n      toast.error(\"Algo deu errado ao registrar, tente novamente.\")\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  //A função é chamada quando é selecionado o assunto\r\n  function ChangeSelect(e){\r\n    setAssunto(e.target.value);\r\n    console.log(e.target.value)\r\n  }\r\n  \r\n  //A função é chamada quando o status é selecionado\r\n  function ChangeOption(e){\r\n    setStatus(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Header />\r\n\r\n      <div className='content'>\r\n        <Title name='Novo chamado'>\r\n          <FiPlus size={25}/>\r\n        </Title>\r\n\r\n        <div className='container'>\r\n          <form className='form-profile' onSubmit={Register}  >\r\n            <label>Requerente</label>\r\n            <input type='text' value={nome} disabled={true}/>\r\n            <label>E-mail</label>\r\n            <input type='text' value={email} disabled={true}/>\r\n\r\n            <label>Assunto</label>\r\n            <select value={assunto} onChange={ChangeSelect}>\r\n              <option value=\"Suporte\">Suporte</option>\r\n              <option value=\"Equipamento\">Equipamento com defeito</option>\r\n              <option value=\"Internet\">Falta de internet</option>              \r\n            </select>\r\n\r\n            <label>Status</label>\r\n            <div className='status'>\r\n              <input \r\n              type='radio'\r\n              name='radio'\r\n              value='Aberto'\r\n              onChange={ChangeOption}\r\n              checked={status === 'Aberto' ? true : false}\r\n              />\r\n              <span>Em Aberto</span>\r\n\r\n              <input \r\n              type='radio'\r\n              name='radio'\r\n              value='Progesso'\r\n              onChange={ChangeOption}\r\n              checked={status === 'Progesso' ? true : false}\r\n              />\r\n              <span>Em progresso</span>\r\n\r\n              <input \r\n              type='radio'\r\n              name='radio'\r\n              value='Atendido'\r\n              onChange={ChangeOption}\r\n              checked={status === 'Atendido' ? true : false}\r\n              />\r\n              <span>Atendido</span>\r\n            </div>\r\n\r\n            <label>Descrição</label>\r\n            <textarea required placeholder='Descreva seu problema aqui.' value={descricao} onChange={(e) => setDescricao(e.target.value)}/>\r\n            <button type='submit' className='salvar-btn'>Salvar</button>\r\n          </form>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\anama\\Documents\\sigos\\src\\components\\modal\\index.js",["122","123","124","125","126"],[],"C:\\Users\\anama\\Documents\\sigos\\src\\components\\Modal\\index.js",["127","128","129","130","131"],[],"import './modal.css';\r\nimport { FiX } from 'react-icons/fi'\r\n\r\nexport default function Modal({item, close}){\r\n  return(\r\n    <div className='modal'>\r\n      <div className='container'>\r\n        <button className='close' onClick={close}>\r\n          <FiX size={25} color=\"#FFF\"/>\r\n          Voltar\r\n        </button>\r\n\r\n      <div>\r\n        <h2>Detalher do chamado: <i>{item.id}</i></h2>\r\n\r\n        <div className='row'>\r\n          <span>\r\n            Requerente: <a>{item.requerente}</a>\r\n          </span>\r\n          <span>\r\n            Email: <a>{item.email}</a>\r\n          </span>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <span>\r\n            Assunto: <a>{item.assunto}</a>\r\n          </span>\r\n          <span>\r\n            Criado em: <a>{item.createdDescricao}</a>\r\n          </span>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <span>\r\n            Status: <a style={{color:\"#FFF\", backgroundColor: item.status === 'Aberto' || item.status === \"Progesso\" ? '#5cb58c' : '#999' }}>{item.status}</a>\r\n          </span>\r\n        </div>\r\n        <>\r\n            <h3>Descrição</h3> \r\n            <p>{item.descricao}</p>\r\n        </>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}",{"ruleId":"132","severity":1,"message":"133","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"136","severity":2,"message":"137","line":10,"column":16,"nodeType":"134","messageId":"138","endLine":10,"endColumn":22},{"ruleId":"132","severity":1,"message":"139","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":15},{"ruleId":"132","severity":1,"message":"140","line":11,"column":10,"nodeType":"134","messageId":"135","endLine":11,"endColumn":21},{"ruleId":"132","severity":1,"message":"141","line":22,"column":10,"nodeType":"134","messageId":"135","endLine":22,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":44,"column":6,"nodeType":"144","endLine":44,"endColumn":8,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"146","line":71,"column":13,"nodeType":"134","messageId":"135","endLine":71,"endColumn":20},{"ruleId":"132","severity":1,"message":"147","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":15},{"ruleId":"132","severity":1,"message":"148","line":5,"column":17,"nodeType":"134","messageId":"135","endLine":5,"endColumn":25},{"ruleId":"132","severity":1,"message":"149","line":28,"column":12,"nodeType":"134","messageId":"135","endLine":28,"endColumn":23},{"ruleId":"132","severity":1,"message":"150","line":17,"column":17,"nodeType":"134","messageId":"135","endLine":17,"endColumn":25},{"ruleId":"132","severity":1,"message":"151","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":13},{"ruleId":"132","severity":1,"message":"152","line":17,"column":17,"nodeType":"134","messageId":"135","endLine":17,"endColumn":25},{"ruleId":"132","severity":1,"message":"153","line":18,"column":14,"nodeType":"134","messageId":"135","endLine":18,"endColumn":19},{"ruleId":"132","severity":1,"message":"150","line":19,"column":17,"nodeType":"134","messageId":"135","endLine":19,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":41,"column":9,"nodeType":"156","messageId":"157","endLine":41,"endColumn":34},{"ruleId":"132","severity":1,"message":"158","line":52,"column":11,"nodeType":"134","messageId":"135","endLine":52,"endColumn":21},{"ruleId":"132","severity":1,"message":"159","line":18,"column":16,"nodeType":"134","messageId":"135","endLine":18,"endColumn":23},{"ruleId":"132","severity":1,"message":"160","line":22,"column":14,"nodeType":"134","messageId":"135","endLine":22,"endColumn":19},{"ruleId":"142","severity":1,"message":"161","line":34,"column":6,"nodeType":"144","endLine":34,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":18,"column":25,"nodeType":"165","endLine":18,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":21,"column":20,"nodeType":"165","endLine":21,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":27,"column":22,"nodeType":"165","endLine":27,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":30,"column":24,"nodeType":"165","endLine":30,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":36,"column":21,"nodeType":"165","endLine":36,"endColumn":142},{"ruleId":"163","severity":1,"message":"164","line":18,"column":25,"nodeType":"165","endLine":18,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":21,"column":20,"nodeType":"165","endLine":21,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":27,"column":22,"nodeType":"165","endLine":27,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":30,"column":24,"nodeType":"165","endLine":30,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":36,"column":21,"nodeType":"165","endLine":36,"endColumn":142},"no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","no-undef","'Signup' is not defined.","undef","'toast' is defined but never used.","'AuthContext' is defined but never used.","'isEmpty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listRef'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'lastDoc' is assigned a value but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'selectCargo' is defined but never used.","'setCargo' is assigned a value but never used.","'Title' is defined but never used.","'setEmail' is assigned a value but never used.","'setRm' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'uploadTask' is assigned a value but never used.","'setUser' is assigned a value but never used.","'SetRm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadId'. Either include it or remove the dependency array.",["167"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [listRef]",{"range":"172","text":"173"},"Update the dependencies array to be: [id, loadId]",{"range":"174","text":"175"},[1341,1343],"[listRef]",[1103,1107],"[id, loadId]"]